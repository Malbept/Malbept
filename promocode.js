
// promocode.js
window.getPromoCodes = function() {
    return window.promoCodes || []; // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ promo-data.js
};

window.activatePromoCode = function(code) {
    console.log('–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞:', code); // –û—Ç–ª–∞–¥–∫–∞
    if (!window.profile) {
        console.error('window.profile –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω!');
        return { success: false, message: '–û—à–∏–±–∫–∞: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω! üòø' };
    }
    if (!window.profile.claimedPromoCodes) {
        window.profile.claimedPromoCodes = [];
    }
    const promo = window.getPromoCodes().find(p => p.code === code);
    if (!promo) {
        return { success: false, message: '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω! üòø' };
    }
    if (window.profile.claimedPromoCodes.includes(code)) {
        return { success: false, message: '–¢—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥! üòø' };
    }
    if (promo.type === 'coins') {
        window.profile.coins += promo.amount;
    } else if (promo.type === 'energy') {
        window.profile.energy = Math.min(
            window.profile.energy + promo.amount,
            window.profile.energyUpgradeLevel > 0 ? window.profile.maxEnergyUpgraded : window.profile.maxEnergy
        );
    } else if (promo.type === 'xp') {
        window.profile.xp += promo.amount;
        if (window.checkLevelUp) {
            window.checkLevelUp();
        } else {
            console.warn('checkLevelUp –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω');
        }
    } else if (promo.type === 'pet_upgrade') {
        if (!window.profile.pets || window.profile.pets.length === 0) {
            return { success: false, message: '–ù–µ—Ç –ø–∏—Ç–æ–º—Ü–µ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è! üêæ' };
        }
        window.profile.pets.forEach(pet => {
            pet.level = (pet.level || 1) + promo.amount;
        });
        window.calculateProfitPerHour();
    }
    window.profile.claimedPromoCodes.push(code);
    if (window.updateProfile) {
        window.updateProfile();
    } else {
        console.error('updateProfile –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω!');
    }
    if (window.saveProfile) {
        window.saveProfile();
    } else {
        console.warn('saveProfile –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω');
    }
    window.updateQuests(); // –û–±–Ω–æ–≤–ª—è–µ–º –∫–≤–µ—Å—Ç—ã
    return {
        success: true,
        message: `–ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! ${
            promo.type === 'coins' ? `+${promo.amount} –º–æ–Ω–µ—Ç üí∞` :
            promo.type === 'energy' ? `+${promo.amount} —ç–Ω–µ—Ä–≥–∏–∏ ‚ö°` :
            promo.type === 'xp' ? `+${promo.amount} XP üìà` :
            `–í—Å–µ –ø–∏—Ç–æ–º—Ü—ã —É–ª—É—á—à–µ–Ω—ã –Ω–∞ ${promo.amount} —É—Ä–æ–≤–µ–Ω—å üêæ`
        }`
    };
};

window.showBonuses = function() {
    console.log('–û—Ç–∫—Ä—ã—Ç–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –ë–æ–Ω—É—Å—ã'); // –û—Ç–ª–∞–¥–∫–∞
    document.getElementById('main-content').innerHTML = `
        <button class="back-button hk-button" onclick="goBack()">–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è</button>
        <h2>–ë–æ–Ω—É—Å—ã üéÅ</h2>
        <div class="promo-section">
            <p>–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–æ–≤!</p>
            <input type="text" id="promoCodeInput" placeholder="–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, vasya)" style="width: 200px;">
            <button class="hk-button" onclick="claimPromoCode()">–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</button>
        </div>
    `;
    window.historyStack.push('showBonuses');
};

window.claimPromoCode = function() {
    const code = document.getElementById('promoCodeInput').value.trim();
    console.log('–ü–æ–ø—ã—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞:', code); // –û—Ç–ª–∞–¥–∫–∞
    if (!code) {
        window.showNotification('–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥!');
        return;
    }
    const result = window.activatePromoCode(code);
    window.showNotification(result.message);
};
